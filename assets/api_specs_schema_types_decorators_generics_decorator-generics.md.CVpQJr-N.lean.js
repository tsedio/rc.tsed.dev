import{_ as n,c as o,af as l,j as r,a as e,G as a,w as t,B as p,o as h}from"./chunks/framework.JWorlyEv.js";const b=JSON.parse('{"title":"Decorator Generics","description":"","frontmatter":{"meta":[{"name":"keywords","description":"api typescript node.js documentation Generics decorator"}]},"headers":[],"relativePath":"api/specs/schema/types/decorators/generics/decorator-generics.md","filePath":"api/specs/schema/types/decorators/generics/decorator-generics.md","lastUpdated":null}'),d={name:"api/specs/schema/types/decorators/generics/decorator-generics.md"};function c(k,s,g,u,y,m){const i=p("ApiAnchorQuery");return h(),o("div",null,[s[8]||(s[8]=l('<h1 id="decorator-generics" tabindex="-1">Decorator Generics <a class="header-anchor" href="#decorator-generics" aria-label="Permalink to &quot;Decorator Generics&quot;">​</a></h1><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Generics } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@tsed/schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><blockquote><p>See <a href="https://github.com/tsedio/tsed/blob/v8.0.0-rc.2/packages/specs/schema/src/types/decorators/generics/generics.ts#L0-L0" target="_blank" rel="noreferrer">/packages/specs/schema/src/types/decorators/generics/generics.ts</a>.</p></blockquote><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Generics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">generics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2>',7)),r("p",null,[s[2]||(s[2]=e("Define generics list. This list is used by ")),a(i,null,{default:t(()=>s[0]||(s[0]=[e("GenericOf")])),_:1}),s[3]||(s[3]=e(" and the ")),a(i,null,{default:t(()=>s[1]||(s[1]=[e("getJsonSchema")])),_:1}),s[4]||(s[4]=e(" function to build the correct JsonSchema."))]),r("p",null,[s[6]||(s[6]=e("See ")),a(i,null,{default:t(()=>s[5]||(s[5]=[e("GenericOf")])),_:1}),s[7]||(s[7]=e(" decorator for more details."))])])}const f=n(d,[["render",c]]);export{b as __pageData,f as default};
